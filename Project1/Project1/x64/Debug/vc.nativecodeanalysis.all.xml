<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>d:\vs2018c++\masm64\project1\project1\</FILEPATH>
      <FILENAME>classdoscode.cpp</FILENAME>
      <LINE>2</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'DosConsole::CpuidOk' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>DosConsole::{ctor}</FUNCTION>
    <DECORATED>??0DosConsole@@QEAA@XZ</DECORATED>
    <FUNCLINE>2</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\vs2018c++\masm64\project1\project1\</FILEPATH>
      <FILENAME>classdoscode.cpp</FILENAME>
      <LINE>2</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>This kind of function may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DosConsole::{ctor}</FUNCTION>
    <DECORATED>??0DosConsole@@QEAA@XZ</DECORATED>
    <FUNCLINE>2</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\vs2018c++\masm64\project1\project1\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>CombineC</FUNCTION>
    <DECORATED>?CombineC@@YANHHHHHN@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\vs2018c++\masm64\project1\project1\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>CombineC</FUNCTION>
    <DECORATED>?CombineC@@YANHHHHHN@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\vs2018c++\masm64\project1\project1\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>CombineC</FUNCTION>
    <DECORATED>?CombineC@@YANHHHHHN@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\vs2018c++\masm64\project1\project1\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>CombineC</FUNCTION>
    <DECORATED>?CombineC@@YANHHHHHN@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\vs2018c++\masm64\project1\project1\</FILEPATH>
      <FILENAME>main.cpp</FILENAME>
      <LINE>142</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: 'getchar'.</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>58</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>